@model Eskul.Models.UserAdd

<br />
<div class="col-md-12">
    <div class="card card-outline card-default">
        <div class="card-body">
            <section class="content">
                <div class="container-fluid">
                    <form asp-action="Create" id="myform" class="needs-validation" novalidate>
                        <div class="col-12 col-sm-6 col-md-12">
                            <div class="box box-primary">
                                <div class="card-body">
                                    <div class="tab-content" id="custom-tabs-three-tabContent">
                                        <div class="tab-pane fade show active" id="custom-tabs-three-home" role="tabpanel" aria-labelledby="custom-tabs-three-home-tab">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <input type="hidden" asp-for="ReferenceNo" />

                                                    <div class="form-group">
                                                        <label for="Type" class="control-label" style="font-weight: normal !important;">Student Type</label>
                                                        @Html.DropDownListFor(m => m.UserType, new List<SelectListItem>
                                                        {
                                                        new SelectListItem{Text="Select", Value=""},
                                                        new SelectListItem{Text="Staff", Value="Staff"},
                                                        new SelectListItem{Text="Parent", Value="Parent"},
                                                        new SelectListItem{Text="Student", Value="Student"}
                                                        }, new { @class = "select", style = "width: 100%;", id = "UserType", onchange = "TextChanged()" })
                                                        <div class="invalid-feedback">This Field is Required</div>
                                                    </div>

                                                    <div class="form-group hidden-select d-none">
                                                        <label for="ReferenceNo" class="control-label" style="font-weight: normal !important;">Ref No</label>
                                                        <select id="refno" class="select" name="ReferenceNo" style="width: 100%;"></select>
                                                        
                                                    </div>

                                                    <div class="form-group">
                                                        <label asp-for="UserName" class="control-label" style="font-weight: normal !important;">User Name</label>
                                                        <input asp-for="UserName" name="UserName" class="form-control form-control-sm" required autocomplete="off" />
                                                        <div class="invalid-feedback">This Field is Required</div>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(Model.Password))
                                                    {
                                                        <div class="form-group">
                                                            <label asp-for="Password" class="control-label" style="font-weight: normal !important;">Password</label>
                                                            <input asp-for="Password" type="password" class="form-control form-control-sm"  autocomplete="off" />
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="form-group">
                                                            <label asp-for="Password" class="control-label" style="font-weight: normal !important;">Password</label>
                                                            <input asp-for="Password" type="password" name="password" class="form-control form-control-sm" required autocomplete="off" />
                                                            <div class="invalid-feedback">This Field is Required</div>
                                                        </div>
                                                    }

                                                    <div class="form-group">

                                                        <input type="submit" value="Create" class="btn btn-block btn-sm mybtn" />
                                                    </div>
                                                </div>
                                                <div class="col-md-4">

                                                    <div class="form-group">
                                                        <label asp-for="ProfileCode" class="control-label" style="font-weight: normal !important;">User Profile</label>
                                                        @Html.DropDownList("ProfileCode", (IEnumerable<SelectListItem>) ViewBag.Profiles, new { @class = "select",style = "width: 100%;",id="ProfileCode",name="ProfileCode",required = "required"})
                                                        <div class="invalid-feedback">This Field is Required</div>
                                                    </div>
                                                    <div class="form-group form-check">
                                                        <label class="form-check-label">
                                                            <input class="form-check-input" asp-for="CanAdd" /> @Html.DisplayNameFor(model => model.CanAdd)
                                                        </label>
                                                    </div>
                                                    <div class="form-group form-check">
                                                        <label class="form-check-label">
                                                            <input class="form-check-input" asp-for="CanUpdate" /> @Html.DisplayNameFor(model => model.CanUpdate)
                                                        </label>
                                                    </div>
                                                    <div class="form-group form-check">
                                                        <label class="form-check-label">
                                                            <input class="form-check-input" asp-for="CanDelete" /> @Html.DisplayNameFor(model => model.CanDelete)
                                                        </label>
                                                    </div>
                                                    <div class="form-group form-check">
                                                        <label class="form-check-label">
                                                            <input class="form-check-input" asp-for="IsAdmin" /> @Html.DisplayNameFor(model => model.IsAdmin)
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.card -->
                            </div>
                        </div>
                    </form>

                </div>
            </section>
        </div>
    </div>
</div>
<script src="~/js/jquery.min.js"></script>
<script>
    function TextChanged() {
        var select = document.getElementById("UserType");
        var selectedValue = select.options[select.selectedIndex].value;

        console.log(selectedValue);
        if (selectedValue === "Staff") {

            $.ajax({
                type: "GET",
                url: "GetUserCodes",
                data: { UserType: selectedValue },
                success: function (data) {
                    console.log(data);

                    var opt = '';

                    $("#Usersession").empty();

                    $.each(data, function (key, value) {
                        console.log(value["Firstname"]);
                        opt += '<option value="' + value["Staffno"] + '">' + value["Firstname"] + ' ' + value["Lastname"] + '</option>';
                        $("#Usersession").append($("<option></option>").attr("value", key).text(value));
                    });

                    $('#refno').html(opt);
                    $('.hidden-select').removeClass('d-none');
                    $("#refno").prepend("<option value='0' selected='selected'>--Select--</option>");
                    $('#refno').select2();
                },
                error: function (xhr, status, error) {
                    // handle the error
                    console.log(error);
                }
            });
        } else if (selectedValue === "Parent") {
            $.ajax({
                type: "GET",
                url: "GetUserCodes",
                data: { UserType: selectedValue },
                success: function (data) {
                    console.log(data);

                    var opt = '';

                    $("#Usersession").empty();

                    $.each(data, function (key, value) {
                        console.log(value["Firstname"]);
                        opt += '<option value="' + value["Parentno"] + '">' + value["Firstname"] + ' ' + value["Lastname"] + '</option>';
                        $("#Usersession").append($("<option></option>").attr("value", key).text(value));
                    });

                    $('#refno').html(opt);
                    $('.hidden-select').removeClass('d-none');
                    $("#refno").prepend("<option value='0' selected='selected'>--Select--</option>");
                    $('#refno').select2();
                },
                error: function (xhr, status, error) {
                    // handle the error
                    console.log(error);
                }
            });
        } else if (selectedValue === "Student") {
            $.ajax({
                type: "GET",
                url: "GetUserCodes",
                data: { UserType: selectedValue },
                success: function (data) {
                    console.log(data);

                    var opt = '';

                    $("#Usersession").empty();

                    $.each(data, function (key, value) {
                        console.log(value["Firstname"]);
                        opt += '<option value="' + value["Studentno"] + '">' + value["Firstname"] + ' ' + value["Lastname"] + '</option>';
                        $("#Usersession").append($("<option></option>").attr("value", key).text(value));
                    });

                    $('#refno').html(opt);
                    $('.hidden-select').removeClass('d-none');
                    $("#refno").prepend("<option value='0' selected='selected'>--Select--</option>");
                    $('#refno').select2();
                },
                error: function (xhr, status, error) {
                    // handle the error
                    console.log(error);
                }
            });
        }
    }

</script>


