@model Eskul.Models.StudentViewDTO
@{

    var listmodel = Model.students;
    var disabledet = Model.DisabledStudentDetails;

}
<br />
<div class="col-md-12">
    <div class="card card-outline card-default">
         <div class="modal fade" id="modal-default">
            <div class="modal-dialog">
                <div class="modal-content box box-primary" style="width:350px;">
                    <div class="modal-header">
                        <h4 class="modal-title" id="Enablestd">Disable Student</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="modal-body">
                        <form id="ReturnBook" class="needs-validation" novalidate>
                            <input hidden asp-for="@Model.StudentId" id="StudentId" name="StudentId" />
                            
                            <div class="form-group">
                                <label asp-for="DisableReasonId" class="control-label" style="font-weight: normal !important;">Disable Reason</label><small class="req"> *</small>
                                @Html.DropDownList("DisableReasonId", (IEnumerable<SelectListItem>)ViewBag.DisableReason, new { @class = "select",style = "width: 100%;",id="DisableReason",name="DisableReason"} )

                            </div>

                             <div class="form-group">
                                <label asp-for="Remarks" class="control-label" style="font-weight: normal !important;">Disable Remarks</label>
                                
                                <textarea asp-for="Remarks" name="Remarks" id="Remarks" class="form-control form-control-sm" required autocomplete="off"></textarea>
                            </div>
                             <div class="form-group" id="En">
                                <label asp-for="EnableRemarks" class="control-label" style="font-weight: normal !important;">Enable Remarks</label>
                                
                                <textarea asp-for="EnableRemarks" name="EnableRemarks" id="EnableRemarks" class="form-control form-control-sm"  autocomplete="off"></textarea>
                            </div>
                            <div class="modal-footer justify-content-between">
                                <input type="submit" value="Save" class="btn btn-block btn-sm mybtn" />
                            </div>
                        </form>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <div class="col-md-12">
                <div class="card card-outline card-default box box-primary">
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                    <div class="card-body">
                        <form asp-action="Index" id="Studs">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="col-sm-12">
                                        <div id="input-type" class="row">
                                            <div class="col-sm-4">
                                                <label class="radio-inline" style="font-weight:normal;">

                                                    <input asp-for="Level" name="Level" class="Core" id="input-type-student" value="O" type="radio"  checked="checked" onchange="populateDropdown()">O-Level

                                                </label>
                                            </div>
                                            <div class="col-sm-4">
                                                <label class="radio-inline" style="font-weight:normal;">
                                                    <input asp-for="Level" name="Level" class="finetype" id="input-type-student" value="A" type="radio" onchange="populateDropdown()">A-Level
                                                </label>
                                            </div>

                                        </div>
                                    </div>
                                </div>
    
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="Class" class="control-label" style="font-weight: normal !important;"></label><small class="req"> *</small>
                                        @Html.DropDownList("Class", (IEnumerable<SelectListItem>)ViewBag.Classes, new { @class = "select",style = "width: 100%;",id="Class",name="Class"} )

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="StreamCode" class="control-label" style="font-weight: normal !important;">Stream</label>
                                        @Html.DropDownList("StreamCode", (IEnumerable<SelectListItem>)ViewBag.Streams, new { @class = "select",style = "width: 100%;",id="Stream",name="Stream"})

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <input type="submit" value="Search" class="btn btn-sm mybtn" style="margin:30px;width:100px;" />
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="box box-primary">
                    <div class="card-body">
                        <table id="example2" class="table table-bordered table-striped table-sm">
                            <thead>
                                <tr>
                                    <th>
                                        Student Name
                                    </th>
                                    <th>
                                        Gender
                                    </th>
                                    <th>
                                        Class
                                    </th>
                                    <th>
                                        Stream
                                    </th>
                                    <th>
                                        Section
                                    </th>
                                    <th>
                                        Funding
                                    </th>
                                    <th>
                                        Status
                                    </th>

                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (listmodel != null && listmodel.Count>0)
                                {
                                    @foreach (var item in listmodel)
                                    {
                                        <tr>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.FullName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Gender)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Class)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.StreamName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Section)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Funding)
                                            </td>
                                            <td>
                                                @if (item.IsDisabled == true)
                                                {
                                                    <span class="badge bg-danger">Disabled</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                            </td>


                                            <td>
                                                <a asp-action="Edit" class="btn btn-xs btn-primary" asp-route-id="@item.StudentId">Edit</a>
                                                <a asp-action="Details" class="btn btn-xs btn-warning" asp-route-id="@item.StudentId">Details</a>
                                                @if (item.IsDisabled == true)
                                                {
                                                   
                                                    <a asp-action="Enable" id="Enable" class="btn btn-xs btn-info" data-id="@item.StudentId" data-reason="@item?.DisabledStudentDetails?.DisableReasonId" data-remarks="@item?.DisabledStudentDetails?.Remarks" data-toggle="modal" data-target="#modal-default" onclick="del('@item?.StudentId')">Enable</a>

                                                }
                                                else
                                                {
                                                    <a asp-action="Disable" id="Disable" class="btn btn-xs btn-danger" data-id="@item.StudentId" data-toggle="modal" data-target="#modal-default" onclick="del('@item.StudentId')">Disable</a>

                                                }
                                            </td>
                                        </tr>
                                    }

                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="text-centere">
                                            No Record Found
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/Jquery.min.3.6.0.js"></script>
<script src="~/js/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/StudentCountHub")
        .build();

    connection.on("UserCountChanged", function (userCount) {
        $("#userCount").text(userCount);

    });
    connection.on("StudentCountChanged", function (StudentCount) {
        $("#StudentCount").text(StudentCount);
    });
    connection.start().then(function () {
        console.log("SignalR connection established.");
    });
</script>
<script>
    function populateDropdown() {
        var level = document.querySelector('input[name="Level"]:checked').value;
        var baseUrl = window.location.protocol + "//" + window.location.host;
        var pathName = window.location.pathname;
        if (pathName.charAt(0) === '/') {
            pathName = pathName.slice(1);
        }
        var fullUrl1 = baseUrl + '/' + pathName;
        fullUrl = fullUrl1.replace('/Create', '').replace('/Index', '');
        console.log('full url', fullUrl);
        var xhr = new XMLHttpRequest();
        xhr.open('GET', fullUrl + '/ClassByLevel?level=' + level);
        xhr.onload = function () {
            if (xhr.status === 200) {
                var values = JSON.parse(xhr.responseText);
                var dropdown1 = document.getElementById('Class');
                dropdown1.innerHTML = '';

                // Add a default "Select" option
                var defaultOption = document.createElement("option");
                defaultOption.value = ""; // Set the value to an empty string
                defaultOption.text = "Select";
                dropdown1.appendChild(defaultOption);

                for (var i = 0; i < values.length; i++) {
                    var option = document.createElement('option');
                    option.value = values[i].classcode;
                    option.text = values[i].Name;
                    dropdown1.appendChild(option);
                }
            }
        };
        xhr.send();
    }
</script>

<script>
    function populateStreamDropdown() {
        var selectedClass = document.getElementById('Class').value;
        console.log('selectedClass on stream', selectedClass);
        var baseUrl = window.location.protocol + "//" + window.location.host;
        var pathName = window.location.pathname;
        if (pathName.charAt(0) === '/') {
            pathName = pathName.slice(1);
        }
        var fullUrl1 = baseUrl + '/' + pathName;
        fullUrl = fullUrl1.replace('/Create', '').replace('/Index', '');
        console.log('full url on stream', fullUrl);
        var xhr = new XMLHttpRequest();
        xhr.open('GET', fullUrl + '/StreamsByClass?classs=' + selectedClass);
        xhr.onload = function () {
            if (xhr.status === 200) {
                var streamedClasses = JSON.parse(xhr.responseText);
                var hasStreamedClasses = streamedClasses.length > 0;
                var dropdown = document.getElementById('Stream');
                dropdown.innerHTML = '';
                if (hasStreamedClasses) {
                    for (var i = 0; i < streamedClasses.length; i++) {
                        var option = document.createElement('option');
                        option.value = streamedClasses[i].StreamId;
                        option.text = streamedClasses[i].Name;
                        dropdown.appendChild(option);
                    }
                } else {
                    var option = document.createElement('option');
                    option.text = 'Class Not Streamed';
                    option.disabled = true;
                    dropdown.appendChild(option);
                }
            } else {
                var dropdown = document.getElementById('Stream');
                dropdown.innerHTML = '<option disabled>An error occurred</option>';
                dropdown.disabled = false;
            }
        };
        xhr.send();
    }

    $(function () {
        $('#Class').change(function () {
            populateStreamDropdown();
        });
    });
</script>
<script src="~/js/jquery-3.6.2.min.js"></script>
<script type="text/javascript">
    var baseUrl = window.location.protocol + "//" + window.location.host;
    var pathName = window.location.pathname;

    if (pathName.charAt(0) === '/') {
        pathName = pathName.slice(1);
    }

    var disableUrl = baseUrl + '/' + pathName + '/Disable';
    console.log(disableUrl, disableUrl);
    $(document).ready(function () {
        $(document).delegate('#Disable', 'click', function (e) {
            StudentId = $(this).data('id');
            console.log('StudentId', StudentId);
            $('#StudentId').val(StudentId);
            document.getElementById('En').classList.add('d-none');
            $('#ReturnBook').prop('action', disableUrl);
        });
    });
</script>

<script type="text/javascript">
    var StudentId;

    $(document).delegate('#Enable', 'click', function (e) {
        StudentId = $(this).attr('data-id');
        var disableReasonId = $(this).attr('data-reason');
        var disableRemarks = $(this).attr('data-remarks');
        console.log('StudentId', StudentId);
        console.log('disableReasonId', disableReasonId);

        $('#Enablestd').text('Enable Student');
        $('#StudentId').val(StudentId);
        $('#DisableReason').val(disableReasonId).prop('readonly', true).change();
        $('#Remarks').val(disableRemarks).prop('readonly', true);
        $('#EnableRemarks').prop('required', true);
        $('#ReturnBook').attr('action', '/Admission/Enable');
    });
</script>
