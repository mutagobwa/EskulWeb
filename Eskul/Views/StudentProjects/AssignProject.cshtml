@model Eskul.Models.ProjectScoreViewModel
@{

    var listmodel = Model.StudentsList;
}
<style>
    .small-textbox {
        width: 50px;
        height: 25px;
        font-size: 14px;
        padding: 2px;
        border: 1px solid gray;
    }

    .big-textbox {
        width: 100%;
        height: 25px;
        font-size: 14px;
        padding: 2px;
        border: 1px solid gray;
    }

    .round {
        border-radius: 50%;
        width: 30px;
        height: 30px;
        background: gray;
        color: #fff;
        text-align: center;
        line-height: 30px;
    }

    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }

    input[type="number"] {
        width: 100%;
        border-radius: 5px;
        border: 1px solid black;
        text-align: center;
    }

    .error {
        font-weight: bold;
        color: red;
        font-size: 24px;
    }
</style>

<br />
<div class="col-md-12">
    <div class="card card-outline card-default">
        <section class="content">
            <!-- /.card-header -->
            <div class="card-body">
                <p>
                    <a asp-action="Index" class="btn btn-sm mybtnsm" asp-route-Term="@Model.Term" asp-route-Class="@Model.Class" asp-route-SubjectCode="@Model.SubjectCode">Back To List</a>
                </p>
                <div class="col-md-12">

                    <div class="card card-outline card-default box box-primary">
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="row">

                                <div class="col-md-12">
                                    <input type="hidden" id="assignmentId" asp-for="@Model.ProjectId" />
                                    <div class="form-group">
                                        <span class="badge bg-success" style="font-size:16px;">Project Name: @Model.ProjectName</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <span class="badge bg-success" style="font-size:16px;">Year: @Model.Year</span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <span class="badge bg-success" style="font-size:16px;">Term: @Model.Term </span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <span class="badge bg-success" style="font-size:16px;">Class: @Model.Class</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box box-primary">
                    <div class="card-body">
                        <form action="~/StudentProjects/AssignProject" method="get" id="form" class="needs-validation" novalidate>
                            <div class="card-body">
                                <div class="row">
                                    <input type="hidden" id="ProjectId" asp-for="@Model.ProjectId" name="id" />
                                    <input type="hidden" id="Class" asp-for="@Model.Class" name="classId" />
                                    <div class="form-group col-12 col-sm-12 col-md-3">
                                        <label asp-for="StreamCode" class="control-label" style="font-weight: normal !important;">Stream</label>
                                        @Html.DropDownList("StreamCode", (IEnumerable<SelectListItem>) ViewBag.Streams, new { @class = "select",style = "width: 100%;",id="StreamCode",name="StreamCode"})

                                    </div>
                                    <div class="form-group col-12 col-sm-12 col-md-3" style="margin-top:30px;">
                                        <input type="submit" value="Search" class="btn btn-sm btn-block mybtn" />
                                    </div>
                                </div>
                            </div>
                        </form>
                        <table id="example2" class="table table-bordered table-striped table-sm">
                            <thead>
                                <tr>
                                    <th class="d-none">
                                        Stream Code
                                    </th>
                                    <th class="d-none">
                                        Student No
                                    </th>
                                    <th>
                                        Student Name
                                    </th>
                                    <th>
                                        Stream
                                    </th>
                                    <th>
                                        Score
                                    </th>
                                    <th>
                                        Comment
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (listmodel != null && listmodel.Count>0)
                                {
                                    @foreach (var item in listmodel.OrderBy(p => p.StudentName))
                                    {
                                        <tr>
                                            <td class="d-none">
                                                @Html.DisplayFor(modelItem => item.StreamCode)
                                            </td>
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.StudentId)
                                            </td>
                                            <td style="width:220px;">
                                                @Html.DisplayFor(modelItem => item.StudentName)
                                            </td>
                                            <td style="width:100px;">
                                                @Html.DisplayFor(modelItem => item.StreamName)
                                            </td>
                                            <td style="width:30px;">
                                                <input type="number" class="big-textbox" id="score-@item.StudentId" oninput="validateScore(this)" value="@item.Score" onchange="saveData(this.id)" />
                                            </td>
                                            <td>
                                                <input type="text" class="big-textbox" id="comment-@item.StudentId" value="@item.Comment" onchange="saveData(this.id)" />
                                            </td>
                                            <td>
                                                <span id="status-@item.StudentId" class="status round">
                                                    <div class="spinner-border spinner-border-sm" role="status" style="display: none;">
                                                        <span class="sr-only">Loading...</span>
                                                    </div>
                                                    <span id="tick-@item.StudentId" class="tick" style="display: none;">✔</span>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="text-centere">
                                            No Record Found
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<form id="myForm"></form>
<Script>
    function saveData(id) {
        var assignmentId = $("#assignmentId").val();
        var studentId = id.split("-")[1];
        var score = document.getElementById("score-" + studentId).value;
        var comment = document.getElementById("comment-" + studentId).value;
        console.log("Saving data for student: " + studentId);
        console.log("Score: " + score);
        console.log("Comment: " + comment);
        console.log("assignmentId:" + assignmentId);
        var baseUrl = window.location.protocol + "//" + window.location.host;
        var pathName = window.location.pathname;
        if (pathName.charAt(0) === '/') {
            pathName = pathName.slice(1);
        }
        pathName = pathName.replace(/\/\d+\.\d+$/, '');
        var fullUrl = baseUrl + '/' + pathName;
        console.log('url is', fullUrl)
        var fd = document.getElementById('myForm');
        var formData = new FormData(fd);
        formData.append('studentId', studentId);
        formData.append('score', score);
        formData.append('comment', comment);
        formData.append('assignmentId', assignmentId);

        for (var pair of formData.entries()) {
            console.log(pair[0] + ": " + pair[1]);
        }
        console.log($(fd).serialize());
        $.ajax({
            type: "POST",
            url: fullUrl,
            //contentType: "application/json",
            data: formData,
            processData: false,
            contentType: false,
            success: function (res) {
                var comment = res.res;
                console.log("Server Response: " + res.res);
                if (res.status === 100) {
                    // Update the UI with a tick mark to indicate success
                    $('#comment-' + studentId).val(comment);
                    document.getElementById("status-" + studentId).innerHTML = "&#10004;";
                    console.log("Data saved successfully for student: " + studentId);
                } else {
                    document.getElementById("status-" + studentId).innerHTML = "&#10060;";
                    console.log("Error" + res.res + " " + " while saving data for student: " + studentId);
                }
            }
        });
    }
</Script>
<script>
    function validateScore(input) {
        var value = parseInt(input.value);
        if (isNaN(value) || value < 0 || value > 10) {
            input.value = "";  // Clear the input field
        }
    }
</script>
<script>
    function populateStreamDropdown() {
        var selectedClass = document.getElementById('Class').value;
        console.log('selectedClass', selectedClass);
        var baseUrl = window.location.protocol + "//" + window.location.host;
        var pathName = window.location.pathname;
        if (pathName.charAt(0) === '/') {
            pathName = pathName.slice(1);
        }
        var trimmedPath = pathName.split('/').slice(0, -1).join('/');

        var fullUrl = baseUrl + '/' + trimmedPath;
        console.log('fullUrl', fullUrl);
        var finalUrl = fullUrl.replace('/AssignProject','');
        console.log('finalUrl', finalUrl);
        var xhr = new XMLHttpRequest();
        xhr.open('GET', finalUrl + '/StreamsByClass?classs='+selectedClass);
        xhr.onload = function () {
            if (xhr.status === 200) {
                var streamedClasses = JSON.parse(xhr.responseText);
                var hasStreamedClasses = streamedClasses.length > 0;
                var dropdown = document.getElementById('StreamCode');
                dropdown.innerHTML = '';
                if (hasStreamedClasses) {
                    for (var i = 0; i < streamedClasses.length; i++) {
                        var option = document.createElement('option');
                        option.value = streamedClasses[i].StreamId;
                        option.text = streamedClasses[i].Name;
                        dropdown.appendChild(option);
                    }
                } else {
                    var option = document.createElement('option');
                    option.text = 'Class Not Streamed';
                    option.disabled = true;
                    dropdown.appendChild(option);
                }
            } else {
                var dropdown = document.getElementById('StreamCode');
                dropdown.innerHTML = '<option disabled>An error occurred</option>';
                dropdown.disabled = true;
            }
        };
        xhr.send();
    }

    document.addEventListener('DOMContentLoaded', function () {
        populateStreamDropdown();
    });

    $(function () {
        $('#Class').change(function () {
            populateStreamDropdown();
        });
    });
</script>

